# This workflow will install Python dependencies, run tests and lint with a
# variety of Python versions
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Testing and coverage for commits on main or develop

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10"]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: Gr1N/setup-poetry@v8
      - run: |
          poetry --version
          poetry config virtualenvs.in-project true
          poetry config --list
      - uses: actions/cache@v3
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry config --list
          poetry install --without docs
      - name: Lint with flake8
        run: poetry run flake8 regressioninc
        if: matrix.platform == 'ubuntu-latest' && matrix.python-version == 3.9
      - name: Check docstrings
        run: poetry run darglint regressioninc
        if: matrix.platform == 'ubuntu-latest' && matrix.python-version == 3.9
      - name: Test with pytest
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report
          poetry run coverage xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: ${{ matrix.platform == 'ubuntu-latest' && matrix.python-version == 3.9 }}
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
